syntax = "proto3";

package dash.vnet_mapping;

import "types.proto";
import "route_type.proto";

message VnetMapping {
    // reference to routing type
    route_type.RoutingType action_type = 1; // renamed as routing_type
    // PA address for the CA
    types.IpAddress underlay_ip = 2;
    // Optional
    // Inner dst mac
    optional bytes mac_address = 3;
    // Optional
    // metering class-id
    optional uint64 metering_class = 4;
    // Optional
    // override the metering class-id coming from the route table
    optional bool override_meter = 5;
    // Optional
    // if true, use the destination VNET VNI for encap. If false or not specified, use source VNET's VNI
    optional bool use_dst_vni = 6;
    // Optional
    optional bool use_pl_sip_eni = 7;
    // Optional
    // overlay src ip if routing_type is {privatelink}
    optional types.IpAddress overlay_sip = 8; // changed to overlay_sip_prefix
    // Optional
    // overlay dst ip if routing_type is {privatelink} 
    optional types.IpAddress overlay_dip = 9; // changed to overlay_dip_prefix
    // Optional
    // ID of routing appliance if routing_type is {privatelinknsg}
    optional uint32 routing_appliance_id = 10;
    optional uint32 metering_class_or = 12;
    optional types.IpPrefix overlay_sip_prefix = 13;
    optional types.IpPrefix overlay_dip_prefix = 14;
    optional string tunnel = 15;
    route_type.RoutingType routing_type = 16;
}

// CA-PA mapping table for Vnet
message VnetMappingKey {
    string vnet = 1;
    // IP address string. E.G. 10.2.0.6
    string ip_address = 2;
}
