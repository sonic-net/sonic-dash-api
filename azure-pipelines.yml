# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - "*"

parameters:
  - name: debian_version
    type: string
    default: bookworm

variables:
  - name: BUILD_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.TargetBranch)
    ${{ else }}:
      value: $(Build.SourceBranchName)

stages:
- stage: Build
  jobs:
  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: amd64
      pool: sonicbld-1es
      sonic_slave: sonic-slave-${{ parameters.debian_version }}
      debian_version: ${{ parameters.debian_version }}
      artifact_name: sonic-dash-api

  - job:
    displayName: "amd64/ubuntu-24.04"
    pool:
      vmImage: 'ubuntu-24.04'

    steps:
    - script: |
        set -e
        sudo apt-get update
        sudo apt-get install -y make debhelper pkg-config nlohmann-json3-dev \
                         swig libgtest-dev cmake build-essential protobuf-compiler libprotobuf-dev \
                         libpython3-dev libboost-all-dev uuid-dev libzmq3-dev
        sudo apt-get install -y python3-pip
        sudo pip3 install pytest
        cd /usr/src/gtest && sudo cmake . && sudo make
      displayName: "Install dependencies"
    - script: |
        set -e
        dpkg-buildpackage -rfakeroot -us -uc -b -j$(nproc)
        mkdir package
        cp ../*.deb package/
      displayName: "Build sonic-dash-api"
    - publish: $(System.DefaultWorkingDirectory)/package
      artifact: sonic-dash-api.amd64.ubuntu24_04
      displayName: "Archive DASH debian packages"
- stage: BuildArm
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: armhf
      pool: sonicbld-armhf
      sonic_slave: sonic-slave-${{ parameters.debian_version }}-armhf
      debian_version: ${{ parameters.debian_version }}
      artifact_name: sonic-dash-api.armhf
  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: arm64
      pool: sonicbld-arm64
      sonic_slave: sonic-slave-${{ parameters.debian_version }}-arm64
      debian_version: ${{ parameters.debian_version }}
      artifact_name: sonic-dash-api.arm64
