# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - "*"

jobs:
- job:
  displayName: "amd64"
  pool:
    vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/sonic-slave-bullseye:latest

  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y make libboost-all-dev libgtest-dev build-essential
    displayName: "Install dependencies"
  - task: DownloadPipelineArtifact@2
    inputs:
      source: specific
      project: build
      pipeline: Azure.sonic-buildimage.common_libs
      artifact: common-lib
      runVersion: 'latestFromBranch'
      runBranch: 'refs/heads/master'
      path: $(Build.ArtifactStagingDirectory)/download
      patterns: |
        target/debs/bullseye/libprotobuf*.deb
        target/debs/bullseye/libprotoc*.deb
        target/debs/bullseye/protobuf-compiler*.deb
  - script: |
      sudo dpkg -i $( find download -type f -name '*.deb' )
    workingDirectory: $(Build.ArtifactStagingDirectory)
    displayName: "Install protobuf"
  - script: |
      mkdir -p package
      dpkg-buildpackage -rfakeroot -us -uc -b -j$(nproc)
      cp ../*.deb package/
    displayName: "Build sonic-dash-api"
  - publish: $(System.DefaultWorkingDirectory)/package
    artifact: sonic-dash-api
