# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - "*"

jobs:
- job:
  displayName: "amd64"
  pool:
    vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/sonic-slave-bullseye:latest

  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y make libboost-all-dev libgtest-dev build-essential
    displayName: "Install dependencies"
  - task: DownloadPipelineArtifact@2
    inputs:
      source: specific
      project: build
      pipeline: Azure.sonic-swss-common
      artifact: sonic-swss-common.amd64.ubuntu20_04
      runVersion: 'latestFromBranch'
      runBranch: 'refs/heads/${{ parameters.swss_common_branch }}'
      path: $(Build.ArtifactStagingDirectory)/download
  - script: |
      set -ex
      sudo dpkg -i $(find ./download -name *.deb)
    workingDirectory: $(Build.ArtifactStagingDirectory)
    displayName: "Install libyang from common lib"
  - script: |
      sudo dpkg -i $(Build.ArtifactStagingDirectory)/download/libprotobuf*_amd64.deb $(Build.ArtifactStagingDirectory)/download/libprotobuf-lite*_amd64.deb $(Build.ArtifactStagingDirectory)/download/protobuf*_amd64.deb
    workingDirectory: $(Pipeline.Workspace)
    displayName: "Install protobuf"
  - script: |
      make all
    workingDirectory: $(Pipeline.Workspace)/misc/tests
    displayName: "Build and check sonic-dash-api"
